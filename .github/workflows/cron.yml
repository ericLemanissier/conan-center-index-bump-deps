# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  schedule:
    - cron:  '0 * * * *'
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  bumps:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      - name: Checkout CCI
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/conan-center-index
          path: conan-center-index
          token: ${{ secrets.COMMIT_TOKEN }}

      - name: add forked CCI remote
        run: |
          git fetch origin
          git remote add upstream https://github.com/conan-io/conan-center-index
          git fetch upstream
          git switch -c master upstream/master
          git config user.name "Eric Lemanissier (bot)"
          git config user.email "eric.lemanissier@gmail.com"
        working-directory: conan-center-index

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip' # caching pip dependencies
      - run: |
          python3 -m pip install -r requirements.txt
          conan config install https://github.com/conan-io/conan-extensions.git

      - name: Export all versions
        run: conan cci:export-all-versions --path recipes/
        working-directory: conan-center-index

      - name: Clean branches
        run: |
          for d in */*/
          do
            branch_name=bump/${d::-1}
            if git rev-parse --quiet --verify origin/$branch_name >/dev/null
            then
              echo "::group::$d"
              wait
              if ! git merge --no-ff --no-commit origin/$branch_name
              then
                echo "::warning  ::branch $branch_name has conflict with master, deleting it"
                git push origin --delete $branch_name &
              elif git diff --cached --quiet
              then
                echo "::warning  ::branch $branch_name has no change from master, deleting it"
                git push origin --delete $branch_name &
              elif [[ $(conan inspect ${d} 2>/dev/null | grep '^deprecated:') ]]
              then
                echo "::warning  ::branch $branch_name is deprecated, deleting it"
                git push origin --delete $branch_name &
              fi
              git merge --abort &
              echo "::endgroup::"
            fi
          done
          wait
        working-directory: conan-center-index/recipes

      # Runs a set of commands using the runners shell
      - name: Bump versions, commit and push
        run: |
          mkdir -p ../../pages
          outfile=../../pages/index.md
          echo "| Recipe to upgrade | Last Bump Date | Recipe | Test Package | PR |" > $outfile
          echo "| ----------------- | -------------- | ------ | ------------ | -- |" >> $outfile

          gh pr list --limit 50000 --repo conan-io/conan-center-index --json number,url,headRefName,headRepositoryOwner --search "head:bump/" --jq ".[] | select(.headRepositoryOwner.login==\"${GITHUB_REPOSITORY_OWNER}\")" > prs.json
          cat prs.json
          for d in */*/
          do
            echo "::group::$d"
            branch_name=bump/${d::-1}
            if ! git switch -c $branch_name origin/$branch_name
            then
              git checkout -b $branch_name upstream/master
              if [[ $(conan inspect ${d} 2>/dev/null | grep '^deprecated:') ]]
              then
                echo "skipping ${d} because it is deprecated"
                continue
              fi
            fi
            conan recipe:bump-deps ${d} &
            conan recipe:bump-deps ${d}test_package &
            wait
            if ! git diff --quiet
            then
              git add ${d}conanfile.py ${d}test_package/conanfile.py
              git commit -m "${d::-1}: bump deps" -m "$(echo -e "Generated and committed by [Conan Center Bump Deps](https://github.com/${GITHUB_REPOSITORY})\nFind more updatable recipes in the [GitHub Pages](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)")"
              git push origin
            fi
            if git show -s --format=%ci origin/$branch_name >commit_date
            then
              COMMIT_DATE=$(<commit_date)
              echo -n "| [$d](https://github.com/conan-io/conan-center-index/tree/HEAD/recipes/${d}conanfile.py)  |" >> $outfile
              echo -n " ${COMMIT_DATE} |" >> $outfile
              if git diff --quiet --merge-base upstream/master origin/$branch_name -- ${d}conanfile.py
              then
                echo -n "  |" >> $outfile
              else
                echo -n " Bumped |" >> $outfile
              fi
              if git diff --quiet --merge-base upstream/master origin/$branch_name -- ${d}test_package/conanfile.py
              then
                echo -n "  |" >> $outfile
              else
                echo -n " Bumped |" >> $outfile
              fi
              jq "select(.headRefName==\"$branch_name\")" prs.json > pr.json
              if [ -s pr.json ]
              then
                echo " <a href=$(jq '.url' pr.json)>#$(jq '.number' pr.json)</a> |" >> $outfile
              else
                echo " <a href=\"https://github.com/${{ github.repository_owner }}/conan-center-index/pull/new/$branch_name\">Open</a> |" >> $outfile
              fi
            fi
            echo "::endgroup::"
          done
          cat $outfile >> $GITHUB_STEP_SUMMARY
        working-directory: conan-center-index/recipes
      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: pages


  status:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      - name: Checkout CCI
        uses: actions/checkout@v4
        with:
          repository: conan-io/conan-center-index
          path: conan-center-index
          token: ${{ secrets.COMMIT_TOKEN }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip' # caching pip dependencies
      - run: |
          python3 -m pip install -r requirements.txt

      - name: find deprecated recipes
        run: |
          for p in */
          do
            echo "::debug::Enterring package $p"
            cd $p
            for d in */
            do
              echo "::debug::Enterring folder $d"
              code=0
              conan inspect $d 1>output 2>/dev/null || code=$?
              export folder=${d::-1}
              if [[ $code -ne 0 ]]
              then
                  echo "$p$d cannot be inspected"
                  echo "::debug::code: $code"
                  yq e -i '(.versions[] | select(.folder == env(folder)) | .status) = "incompatible"' config.yml &
                  rm "${d}conanfile.py" &
              elif [[ $( grep '^deprecated:' output) ]]
              then
                  echo "$p$d is deprecated"
                  yq e -i '(.versions[] | select(.folder == env(folder)) | .status) = "deprecated"' config.yml &
                  rm "${d}conanfile.py" &
              fi
              rm output
            done
            cd ..
          done
          wait
        working-directory: conan-center-index/recipes

      - name: Check dependencies status
        run: |
          echo "::debug::Creating pages"
          mkdir -p ../../pages
          echo "::debug::Creating outfile"
          outfile=../../pages/dependencies_maintenance_status.md
          echo "| Recipe | unknown dependencies | unknown dependencies version | incompatible dependencies | deprecated dependencies |" > $outfile
          echo "| ------ | -------------------- | ---------------------------- | ------------------------- | ----------------------- |" >> $outfile
          echo "::debug::Iterating recipes"
          for d in */*/
          do
            echo "::debug::recipe $d"
            if [[ ! -f "$d/conanfile.py" ]]
            then
              continue
            fi
            deps=$(python ../../get_all_dependencies.py $d/conanfile.py | sort -u)
            if [ -n "$deps" ]
            then
              do_not_exist=""
              do_not_have_version=""
              incompatible=""
              deprecated=""
              while IFS= read -r r
              do
                echo "::debug::dependency $r"
                package=$(echo $r | cut -d / -f 1)
                export version=$(echo $r | cut -d / -f 2)
                if [[ ${version: 0:1} == "[" && ${version: -1:1} == "]" ]]
                then
                  echo "::debug::ignoring because version is a range"
                  continue
                fi
                version="\"$version\""
                config_yml="$package/config.yml"
                if [[ ! -f $config_yml ]]
                then
                  echo "::warning  ::recipe $d depends on $package which does not exist"
                  do_not_exist+="$package, "
                elif [[ $(yq e '.versions | has(env(version))' $config_yml) == false ]]
                then
                  echo "::warning  ::recipe $d depends on $package which does not have version $version"
                  do_not_have_version+="[$r](https://github.com/conan-io/conan-center-index/tree/HEAD/recipes/$package/config.yml), "
                else
                  status=$(yq e '.versions[env(version)].status' $config_yml)
                  folder=$(yq e '.versions[env(version)].folder' $config_yml)
                  case $status in
                  incompatible)
                    echo "::warning  ::recipe $d depends on $r which is incompatible with conan 2"
                    incompatible+="[$r](https://github.com/conan-io/conan-center-index/tree/HEAD/recipes/$package/$folder/conanfile.py), "
                    ;;
                  deprecated)
                    echo "::warning  ::recipe $d depends on $r which is deprecated"
                    deprecated+="[$r](https://github.com/conan-io/conan-center-index/tree/HEAD/recipes/$package/$folder/conanfile.py), "
                    ;;
                  null)
                    ;;
                  *)
                    echo "::warning  ::recipe $d depends on $r which status is unknown: $status"
                    ;;
                  esac
                fi
                echo "::debug::finish dependency"
              done <<< "$deps"
              if [[ ! -z "${do_not_exist}${do_not_have_version}${incompatible}${deprecated}" ]]
              then
                echo "::debug::appending to outfile $d"
                echo -n "| [$d](https://github.com/conan-io/conan-center-index/tree/HEAD/recipes/${d}conanfile.py) | " >> $outfile
                if [[ ! -z "$do_not_exist" ]]
                then
                  echo -n "${do_not_exist::-2}" >> $outfile
                fi
                echo -n " | " >> $outfile
                if [[ ! -z "$do_not_have_version" ]]
                then
                  echo -n "${do_not_have_version::-2}" >> $outfile
                fi
                echo -n " | " >> $outfile
                if [[ ! -z "$incompatible" ]]
                then
                  echo -n "${incompatible::-2}" >> $outfile
                fi
                echo -n " | " >> $outfile
                if [[ ! -z "$deprecated" ]]
                then
                  echo -n "${deprecated::-2}" >> $outfile
                fi
                echo " |" >> $outfile
              fi
            fi
            echo "::debug::Finish recipe"
          done
          cat $outfile >> $GITHUB_STEP_SUMMARY
        working-directory: conan-center-index/recipes

      - name: post github comment
        env:
          GH_TOKEN:  ${{ secrets.ISSUE_TOKEN }}
        run: |
          echo "The following table lists all the recipes which have dependencies which are not maintained any more." > body
          echo "It is automatically generated by https://github.com/${GITHUB_REPOSITORY} so don't hesitate to report issues/improvements there." >> body
          cat pages/dependencies_maintenance_status.md >> body
          echo "" >> body
          echo "This can also be viewed on https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/dependencies_maintenance_status" >> body
          cat body
          gh issue edit ${{ vars.ISSUE_ID }} --repo conan-io/conan-center-index --body-file body

      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: pages

  Gather_Results:
    name: Gather results
    needs: [bumps, status]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: my-artifact

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: Gather_Results
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
