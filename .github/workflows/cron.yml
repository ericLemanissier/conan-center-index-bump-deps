# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  schedule:
    - cron:  '0 * * * *'
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  bumps:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      - name: Checkout CCI
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/conan-center-index
          path: conan-center-index
          token: ${{ secrets.COMMIT_TOKEN }}

      - name: add forked CCI remote
        run: |
          git fetch origin
          git remote add upstream https://github.com/conan-io/conan-center-index
          git fetch upstream
          git switch -c master upstream/master
          git config user.name "Eric Lemanissier (bot)"
          git config user.email "eric.lemanissier@gmail.com"
        working-directory: conan-center-index

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: 'pip' # caching pip dependencies
      - run: |
          python3 -m pip install -r requirements.txt
          conan config install https://github.com/conan-io/conan-extensions.git

      - name: Export all versions
        run: conan cci:export-all-versions --path recipes/
        working-directory: conan-center-index

      - name: Clean branches
        run: |
          for d in */*/
          do
            branch_name=bump/${d::-1}
            if git rev-parse --quiet --verify origin/$branch_name >/dev/null
            then
              echo "::group::$d"
              wait
              if ! git merge --no-ff --no-commit origin/$branch_name
              then
                echo "::warning  ::branch $branch_name has conflict with master, deleting it"
                git push origin --delete $branch_name &
              elif git diff --cached --quiet
              then
                echo "::warning  ::branch $branch_name has no change from master, deleting it"
                git push origin --delete $branch_name &
              elif [[ $(conan inspect ${d} 2>/dev/null | grep '^deprecated:') ]]
              then
                echo "::warning  ::branch $branch_name is deprecated, deleting it"
                git push origin --delete $branch_name &
              fi
              git merge --abort &
              echo "::endgroup::"
            fi
          done
          wait
        working-directory: conan-center-index/recipes

      # Runs a set of commands using the runners shell
      - name: Bump versions, commit and push
        run: |
          mkdir -p ../../pages
          outfile=../../pages/index.md
          echo "| Recipe to upgrade | Last Bump Date | Recipe | Test Package | PR |" > $outfile
          echo "| ----------------- | -------------- | ------ | ------------ | -- |" >> $outfile

          gh pr list --limit 50000 --repo conan-io/conan-center-index --json number,url,headRefName,headRepositoryOwner --search "head:bump/" --jq ".[] | select(.headRepositoryOwner.login==\"${GITHUB_REPOSITORY_OWNER}\")" > prs.json
          cat prs.json
          for d in */*/
          do
            echo "::group::$d"
            branch_name=bump/${d::-1}
            if ! git switch -c $branch_name origin/$branch_name
            then
              git checkout -b $branch_name upstream/master
              if [[ $(conan inspect ${d} 2>/dev/null | grep '^deprecated:') ]]
              then
                echo "skipping ${d} because it is deprecated"
                continue
              fi
            fi
            conan recipe:bump-deps ${d} &
            conan recipe:bump-deps ${d}test_package &
            wait
            if ! git diff --quiet
            then
              git add ${d}conanfile.py ${d}test_package/conanfile.py
              git commit -m "${d::-1}: bump deps" -m "$(echo -e "Generated and committed by [Conan Center Bump Deps](https://github.com/ericLemanissier/conan-center-index-bump-deps)\nFind more updatable recipes in the [GitHub Pages](https://ericlemanissier.github.io/conan-center-index-bump-deps/)")"
              git push origin
            fi
            if git show -s --format=%ci origin/$branch_name >commit_date
            then
              COMMIT_DATE=$(<commit_date)
              echo -n "| $d |" >> $outfile
              echo -n " ${COMMIT_DATE} |" >> $outfile
              if git diff --quiet --merge-base upstream/master origin/$branch_name -- ${d}conanfile.py
              then
                echo -n "  |" >> $outfile
              else
                echo -n " Bumped |" >> $outfile
              fi
              if git diff --quiet --merge-base upstream/master origin/$branch_name -- ${d}test_package/conanfile.py
              then
                echo -n "  |" >> $outfile
              else
                echo -n " Bumped |" >> $outfile
              fi
              jq "select(.headRefName==\"$branch_name\")" prs.json > pr.json
              if [ -s pr.json ]
              then
                echo " <a href=$(jq '.url' pr.json)>#$(jq '.number' pr.json)</a> |" >> $outfile
              else
                echo " <a href=\"https://github.com/${{ github.repository_owner }}/conan-center-index/pull/new/$branch_name\">Open</a> |" >> $outfile
              fi
            fi
            echo "::endgroup::"
          done
        working-directory: conan-center-index/recipes
      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: pages


  status:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      - name: Checkout CCI
        uses: actions/checkout@v4
        with:
          repository: conan-io/conan-center-index
          path: conan-center-index
          token: ${{ secrets.COMMIT_TOKEN }}

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: 'pip' # caching pip dependencies
      - run: |
          python3 -m pip install -r requirements.txt
          conan config install https://github.com/conan-io/conan-extensions.git

      - name: Remove deprecated recipes
        run: |
          for p in */
          do
            echo "::debug::Enterring package $p"
            cd $p
            for d in */
            do
              echo "::debug::Enterring folder $d"
              code=0
              conan inspect $d 1>output 2>/dev/null || code=$?
              if [[ $code -ne 0 || $( grep '^deprecated:' output) ]]
              then
                echo "removing $p$d because it is deprecated"
                echo "::debug::code: $code"
                echo "::debug::$(<output)"
                rm -r $d
                yq -i "del(.versions[] | select(.folder == \"${d::-1}\"))" config.yml || echo "::error::Could not remove $d from $p"
              fi
              rm output
            done
            cd ..
          done
        working-directory: conan-center-index/recipes

      - name: Export all versions
        run: conan cci:export-all-versions --path recipes/
        working-directory: conan-center-index

      - name: Check dependencies status
        run: |
          echo "::debug::Creating pages"
          mkdir -p ../../pages
          echo "::debug::Creating outfile"
          outfile=../../pages/dependencies_maintenance_status.md
          echo "| Recipe | Unmaintained dependencies |" > $outfile
          echo "| ------ | ------------------------- |" >> $outfile
          echo "::debug::Iterating recipes"
          for d in */*/
          do
            echo "::debug::recipe $d"
            msg=""
            for r in $(python ../../scan_for_non_maintained_dependencies.py $d/conanfile.py)
            do
              echo "::debug::dependency $r"
              r_path=$(conan cache path $r 2>/dev/null || true)
              echo "::debug::path $r_path"
              if [[ -z "$r_path" ]]
              then
                echo "::warning  ::recipe $d depends on $r which is not maintained"
                msg+="$r, "
              fi
              echo "::debug::finish dependency"
            done
            if [[ ! -z "$msg" ]]
            then
              echo "::debug::appending to outfile $d $msg"
              echo "| $d | ${msg::-2} |" >> $outfile
            fi
            echo "::debug::Finish recipe"
          done
        working-directory: conan-center-index/recipes

      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: pages

  Gather_Results:
    name: Gather results
    needs: [bumps, status]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: my-artifact

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: Gather_Results
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
